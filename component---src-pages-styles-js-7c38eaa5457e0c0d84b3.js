(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{Pbiz:function(e,t,a){"use strict";a.r(t);var o=a("q1tI"),s=a.n(o),c=a("Wbzz"),i=a("Kvkj"),n=a("qKvR");t.default=function(){return Object(n.c)(s.a.Fragment,null,Object(n.c)(i.l,{title:"Styling - Field Gatsby Starter",description:"Opinionated starter by Field for the Gatsby framework. Using dependencies like Emotion, styled-system, and Polished to deliver high quality and performant interfaces with a great developer experience."}),Object(n.c)(i.p,{pt:{_:"layout.5",md:"layout.6"}},Object(n.c)(i.o,{space:{_:"layout.5",md:"layout.6"},dividers:!0},Object(n.c)(i.j,{size:800},"Styles"),Object(n.c)(i.k,{size:600,maxWidth:768},"Our method for styling elements in this project uses"," ",Object(n.c)(i.a,{as:"a",href:"https://emotion.sh/",target:"_blank",rel:"noopener noreferrer",fontWeight:600,color:"brand.primary"},"Emotion"),", a library designed for writing css styles with JavaScript. It provides powerful and predictable style composition in addition to a great developer experience with features such as source maps, labels, and testing utilities. Both string and object styles are supported."),Object(n.c)(i.c,{space:"layout.3"},Object(n.c)(i.b,{width:{_:1,md:.5}},Object(n.c)(i.o,{space:"layout.1"},Object(n.c)(i.j,{size:600},"Labeling"),Object(n.c)(i.k,{size:400,maxWidth:384,color:"text.alt"},"Because Emotion abstracts away most traditional CSS classes, we use HTML ",Object(n.c)("code",null,"data-*")," attributes to label components so that editors can easily identify what elements are what components in the DOM. We do this by assigning components"," ",Object(n.c)("code",null,'data-component-id="componentName"')," attributes. These are great for element-associated metadata and have"," ",Object(n.c)(i.a,{as:"a",href:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes",target:"_blank",rel:"noopener noreferrer",fontWeight:600,color:"brand.primary"},"little to no performance overhead"),"."))),Object(n.c)(i.b,{width:{_:1,md:.5}},Object(n.c)(i.o,{space:"layout.1"},Object(n.c)(i.j,{size:600},"Extending"),Object(n.c)(i.k,{size:400,maxWidth:384,color:"text.alt"},"To expand upon Emotion, we use"," ",Object(n.c)(i.a,{as:"a",href:"https://styled-system.com/",target:"_blank",rel:"noopener noreferrer",fontWeight:600,color:"brand.primary"},"styled-system")," ",'which provides us with "style props for rapid UI development." We\'re able to assign most of the typically styles we use to a component called ',Object(n.c)("code",null,"Box")," which we can then use as a starting point for new components. This allows us to write shorthand CSS and access our ",Object(n.c)("code",null,"Theme.js")," variables providing consistent spacing, colours, fonts, type styles, and breakpoints. Style prop definitions automatically generate into CSS classes that are assigned to their components.")))),Object(n.c)(i.c,{space:"layout.1"},Object(n.c)(i.b,{width:{_:1,md:.5}},Object(n.c)(c.Link,{to:"/pages/"},Object(n.c)(i.a,{p:{_:"layout.1",md:"layout.3"},bg:"brand.primary"},Object(n.c)(i.o,{space:"layout.5"},Object(n.c)(i.m,{size:300,color:"text.alt"},"How it works"),Object(n.c)(i.j,{size:700},"Pages"))))),Object(n.c)(i.b,{width:{_:1,md:.5}},Object(n.c)(c.Link,{to:"/"},Object(n.c)(i.a,{p:{_:"layout.1",md:"layout.3"},bg:"surface.wash"},Object(n.c)(i.o,{space:"layout.5"},Object(n.c)(i.m,{size:300,color:"text.alt"},"Index"),Object(n.c)(i.j,{size:700},"Home")))))))))}}}]);
//# sourceMappingURL=component---src-pages-styles-js-7c38eaa5457e0c0d84b3.js.map